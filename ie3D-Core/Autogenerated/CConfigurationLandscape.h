// autogenerated: do not add any changes
#ifndef CConfigurationLandscape_h
#define CConfigurationLandscape_h
#include "IConfiguration.h"
#include "CConfigurationMaterial.h"
class CConfigurationLandscape : public IConfigurationGameObject
{
public:
CConfigurationLandscape(void) = default;
~CConfigurationLandscape(void) = default;
std::string getHeightmapDataFilename(void) const;
#if defined(__EDITOR__)
void setHeightmapDataFilename(std::string heightmap_data_filename);
#endif
std::string getSplattingDataFilename(void) const;
#if defined(__EDITOR__)
void setSplattingDataFilename(std::string splatting_data_filename);
#endif
std::string getPreprocessSplattingMaterialFilename(void) const;
#if defined(__EDITOR__)
void setPreprocessSplattingMaterialFilename(std::string preprocess_splatting_material_filename);
#endif
i32 getZOrder(void) const;
#if defined(__EDITOR__)
void setZOrder(i32 z_order);
#endif
ui32 getSizeX(void) const;
#if defined(__EDITOR__)
void setSizeX(ui32 size_x);
#endif
ui32 getSizeY(void) const;
#if defined(__EDITOR__)
void setSizeY(ui32 size_y);
#endif
bool getPerlin(void) const;
#if defined(__EDITOR__)
void setPerlin(bool is_perlin);
#endif
f32 getFrequency(void) const;
#if defined(__EDITOR__)
void setFrequency(f32 frequency);
#endif
i32 getOctaves(void) const;
#if defined(__EDITOR__)
void setOctaves(i32 octaves);
#endif
ui32 getSeed(void) const;
#if defined(__EDITOR__)
void setSeed(ui32 seed);
#endif
std::vector<std::shared_ptr<IConfiguration>> getMaterialsConfigurations(void) const;
#if defined(__EDITOR__)
void addMaterialsConfigurations(const std::shared_ptr<CConfigurationMaterial>& material);
#endif
#if defined(__EDITOR__)
void setMaterialsConfigurations(const std::shared_ptr<CConfigurationMaterial>& material, i32 index);
#endif
void serialize(const std::string& filename);
#if defined(__EDITOR__)
void deserialize(const std::string& filename);
#endif
};
#endif
