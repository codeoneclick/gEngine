// autogenerated: do not add any changes
#ifndef CConfigurationMaterial_h
#define CConfigurationMaterial_h
#include "IConfiguration.h"
#include "CConfigurationShader.h"
#include "CConfigurationTexture.h"
class CConfigurationMaterial : public IConfiguration
{
public:
CConfigurationMaterial(void) = default;
~CConfigurationMaterial(void) = default;
std::string getRenderOperationName(void) const;
bool isDepthTest(void) const;
bool isDepthMask(void) const;
bool isCulling(void) const;
GLenum getCullingMode(void) const;
bool isBlending(void) const;
GLenum getBlendingFunctionSource(void) const;
GLenum getBlendingFunctionDestination(void) const;
bool isClipping(void) const;
f32 getClippingX(void) const;
f32 getClippingY(void) const;
f32 getClippingZ(void) const;
f32 getClippingW(void) const;
bool isReflecting(void) const;
bool isShadowing(void) const;
bool isDebugging(void) const;
std::shared_ptr<CConfigurationShader> getShaderConfiguration(void) const;
std::vector<std::shared_ptr<IConfiguration>> getTexturesConfigurations(void) const;
void serialize(const std::string& filename);
};
#endif
