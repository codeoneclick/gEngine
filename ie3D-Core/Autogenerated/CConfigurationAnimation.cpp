// autogenerated: do not add any changes
#include "CConfigurationAnimation.h"
std::string CConfigurationAnimation::getAnimationFilename(void) const
{
const auto& iterator = m_attributes.find("/animation/filename");
assert(iterator != m_attributes.end());
std::string value; iterator->second->get(&value);
return value;
}
#if defined(__EDITOR__)
void CConfigurationAnimation::setAnimationFilename(std::string filename)
{
IConfiguration::setAttribute("/animation/filename", std::make_shared<CConfigurationAttribute>(filename));
}
#endif
std::string CConfigurationAnimation::getAnimationName(void) const
{
const auto& iterator = m_attributes.find("/animation/name");
assert(iterator != m_attributes.end());
std::string value; iterator->second->get(&value);
return value;
}
#if defined(__EDITOR__)
void CConfigurationAnimation::setAnimationName(std::string name)
{
IConfiguration::setAttribute("/animation/name", std::make_shared<CConfigurationAttribute>(name));
}
#endif
void CConfigurationAnimation::serialize(pugi::xml_document& document, const std::string& path)
{
pugi::xpath_node node;
node = document.select_single_node((path + "/animation").c_str());
std::string filename = node.node().attribute("filename").as_string();
IConfiguration::setAttribute("/animation/filename", std::make_shared<CConfigurationAttribute>(filename));
std::string name = node.node().attribute("name").as_string();
IConfiguration::setAttribute("/animation/name", std::make_shared<CConfigurationAttribute>(name));
}
#if defined(__EDITOR__)
void CConfigurationAnimation::deserialize(pugi::xml_node& node)
{
pugi::xml_attribute attribute;
attribute = node.append_attribute("filename");
std::string filename = CConfigurationAnimation::getAnimationFilename();
attribute.set_value(filename.c_str());
attribute = node.append_attribute("name");
std::string name = CConfigurationAnimation::getAnimationName();
attribute.set_value(name.c_str());
}
#endif
void CConfigurationAnimation::serialize(pugi::xml_document& document, pugi::xpath_node& node)
{
std::string filename = node.node().attribute("filename").as_string();
IConfiguration::setAttribute("/animation/filename", std::make_shared<CConfigurationAttribute>(filename));
std::string name = node.node().attribute("name").as_string();
IConfiguration::setAttribute("/animation/name", std::make_shared<CConfigurationAttribute>(name));
}
